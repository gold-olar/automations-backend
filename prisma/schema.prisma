generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id                   String                 @id @unique
  email                String                 @unique
  name                 String?
  plan                 SubscriptionPlan       @default(FREE)
  AutomationExecutions AutomationExecutions[]
  JsonTransforms       JsonTransforms[]
  AutomationSchedule   AutomationSchedule[]
}

model AccessCode {
  id     Int              @id @default(autoincrement())
  value  String
  plan   SubscriptionPlan
  active Boolean          @default(false)
}

model AutomationExecutions {
  id                Int             @id @default(autoincrement())
  user_id           String
  automation_app_id Int
  input             String
  output            String
  json_transform_id Int?
  automation_app    AutomationApps  @relation(fields: [automation_app_id], references: [id])
  json_transfom     JsonTransforms? @relation(fields: [json_transform_id], references: [id])
  users             User            @relation(fields: [user_id], references: [id])
}

model AutomationApps {
  id                   Int                    @id @default(autoincrement())
  type                 AutomationApp
  input_schema         String?
  output_schema        String?
  AutomationExecutions AutomationExecutions[]
}

model JsonTransforms {
  id                   Int                    @id @default(autoincrement())
  mapper               String
  user_id              String
  AutomationExecutions AutomationExecutions[]
  users                User                   @relation(fields: [user_id], references: [id])
}

model AutomationSchedule {
  id              Int    @id @default(autoincrement())
  user_id         String
  chain_links     String
  schedule_config String
  users           User   @relation(fields: [user_id], references: [id])
}

enum SubscriptionPlan {
  FREE
  PREMIUM
}

enum AutomationApp {
  SCRAPE_LINKEDIN_PROFILE_SEARCH
  ENRICH_LINKEDIN_PROFILES
}
